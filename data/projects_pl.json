{
  "projects": [
    {"tag": "norskmemo",
     "header": "NorskMemo",
     "description": "Aplikacja służąca do nauki języka norweskiego.",
     "functioning": "Po zalogowaniu, zostaje odblokowana możliwość wczytania bazy danych (w tej wersji dostępny zasób: czasowniki i przysłówki). Zadaniem użytkownika jest przetłumaczenie danego wyrażenia po norwesku na angielski.",
     "options_list": ["Zapis wyniku do pliku tekstowego: poprawnych i błędnych odpowiedzi.", "Eksport i import preferencji użytkownika (wymiary okna oraz rozmiar czcionki).", "Zmiana rozmiaru czcionki.", "Panel z przyciskiem odtwarzającym syntezator mowy danego wyrażenia norweskiego wraz z możliwością dostosowania natężenia dźwięku i balansu stereo. Użytkownik w każdej chwili ma możliwość schowania panelu za pomocą przycisków opcji w pasku menu.", "Opcja „Tylko do odczytu” dezaktywująca zapis do pliku tekstowego."],
     "github": "https://github.com/micavanco",
     "download": "../img/projects/norskmemo/download/NorskMemo.jar",
     "images": ["norskmemo/norskmemo1.bmp", "norskmemo/norskmemo2.bmp", "norskmemo/norskmemo3.bmp", "norskmemo/norskmemo4.bmp"]
    },
    {"tag": "movementanalyzer",
      "header": "Analizator Ruchu",
      "description": "Aplikacja utworzona w ramach pracy inżynierskiej na Politechnice Wrocławskiej. Głównym celem pracy inżynierskiej było stworzenie autorskiego oprogramowania w środowisku programistycznym Qt do kamery SoftKinetic DS325. Stworzona aplikacja umożliwia rejestrację ruchu obiektów w przestrzeni oraz późniejszą ich analizę w sposób intuicyjny. W celu realizacji projektu dokonano przeglądu algorytmów wymaganych do rejestracji obiektów w przestrzeni. Rozpoznano wiodące rozwiązania w dziedzinie algorytmiki, akwizycji oraz przetwarzania obrazów cyfrowych. Następnie wybrano i wdrożono najlepsze z nich. Zaproponowane rozwiązania i przygotowana aplikacja przystosowana jest dla studentów medycyny. Mogą oni sprawdzić swoje umiejętności posługiwania się szczypcami laparoskopowymi realizując ćwiczenia na makietach imitujących obręb jamy brzusznej.",
      "functioning": "Graficzny interfejs użytkownika (GUI) zawiera trzy przyciski stanowiące główne podgrupy realizujące zadania: wyświetlenie obrazu przechwyconego z kamery w trybie głębi i zwykłym, śledzenie i rejestracja ruchu obiektów oraz ostatni służący do wczytania danych z zarejestrowanego przebiegu, zobrazowanie w postaci wykresów oraz analiza za pomocą szybkiej transformacji Fourier'a.",
      "options_list": ["Wyświetlanie obrazu w dwóch trybach: głębi i zwykłym wraz z możliwością dostosowania ustawień oraz sprawdzenia odległości kamery od badanego obiektu.", "Kluczowa opcja głównego menu \"Nagrywanie\" - Zawarte w niej segmenty realizują trzy zadania odnoszące się do: zobrazowania i filtracji obrazu transmitowanego z kamery, lokalizacji zaznaczonego obiektu oraz zapisu jego współrzędnych położenia przez wybrany okres do pliku.", "\"Analiza Danych\" - Opcja spełnia funkcje: wczytywania plików, generowania wykresów na podstawie danych w nich zawartych oraz późniejszą ich analizę. Boczny panel sterowania udostępnia: trzy tryby analizy danych, dwa przyciski do wczytania danych z dwóch plików oraz przycisk do generowania przebiegów. Pod każdym przyciskiem wczytywania pliku wyświetlana jest informacja dotycząca nazwy wczytanego pliku. Generowane wykresy umieszczane są w dwóch zakładkach. W zależności od trybu mogą znajdować się wykresy położenia od czasu lub przestrzeni, bądź wykres FFT w trybie analizy dwóch plików. Umieszczenie kursora nad interesującym punktem nad każdym z wykresów skutkuje wyświetleniem okna z informacją o położeniu tego punktu w osi x i y."],
      "github": "https://github.com/micavanco/SoftKinetic_App",
      "download": "",
      "images": ["movementanalyzer/movementanalyzer1.png", "movementanalyzer/movementanalyzer2.png", "movementanalyzer/movementanalyzer3.png", "movementanalyzer/movementanalyzer4.png", "movementanalyzer/movementanalyzer5.png","movementanalyzer/movementanalyzer6.png"]
    },
    {"tag": "snake3d",
      "header": "Snake3D",
      "description": "Implementacja klasycznej gry Nokii 3310 \"Snake\" w wersji 3D, bazując na silniku grafinym dostarczonym w bibliotekach Qt.",
      "functioning": "Przemieszczanie się obiektów 3D poprzez obsługę zdarzeń klawiatury.",
      "options_list": ["Projekt aktualnie w budowie"],
      "github": "https://github.com/micavanco/SnakeQt",
      "download": "",
      "images": ["snake3d/snake3d1.png", "snake3d/snake3d2.png"]
    },
    {"tag": "comcommunicator",
      "header": "COMCommunicator",
      "description": "Aplikacja bazująca na bibliotece Qt, służąca do wysyłania i odbierania informacji przez port szeregowy (COM).",
      "functioning": "Wyszukiwanie dostępnych portów za pomocą przycisku \"scan\". Łączenie się z wybranymi portami, w odpowiedniej częstotliwości odpowiedniej za pomocą przycisku \"connect\". Aplikacja umożliwia wysyłanie danych wpisanych w okno tekstowe.",
      "options_list": ["Projekt aktualnie w budowie"],
      "github": "https://github.com/micavanco/COMCommunicator",
      "download": "",
      "images": ["comcommunicator/comcommunicator1.png"]
    },
    {"tag": "analyzerbvh",
      "header": "Analizator BVH",
      "description": "Aplikacja pozwalająca zobrazować i przeanalizować dane ruchu z pliku .bvh zapisanych z kamer typu Kinect.",
      "functioning": "Po wczytaniu pliku użytkownik ma możliwość wyboru kończyny typu wykresu 3D/2D oraz płaszczyzny. Każda klatka nagrania jest reprezentowana przez jeden punkt na wykresie. W kolejnej zakładce menu na podstawie wyboru użytkownika jest generowany wykres częstotliwości na podstawie algorytmu Szybkiej Transformaty Fouriera FFT. Istnieje możliwość porównania przebiegów z dwóch różnych plików na jednym wykresie 2D.",
      "options_list": ["Wyświetlanie etykiet punktów na wykresie 3D oraz ich interpolacja.", "Wszystkie wykresy posiadają funkcje nasłuchujące, dające możliwość rotacji bądź zmiany zakresu za pomocą przycisków i ruchów myszy.", "Analiza FFT Szybkiej Transformaty Fouriera dla danej kończyny."],
      "github": "https://github.com/micavanco",
      "download": "../img/projects/analyzerbvh/download/AnalyzerBVH.rar",
      "images": ["analyzerbvh/javafx1.bmp","analyzerbvh/javafx2.bmp","analyzerbvh/javafx3.bmp","analyzerbvh/javafx4.bmp"]
    },
    {"tag": "pagescheck",
      "header": "PagesCheck",
      "description": "Aplikacja służąca do sprawdzenia wymaganej ilości stron do przeczytania dziennie w celu ukończenia danej książki/książek o tematyce IT w wyznaczonym terminie.",
      "functioning": "Użytkownik w pierwszym polu edycyjnym z podpisem „Wpisz termin”, wpisuje wyznaczony termin na przeczytanie. Pole edycyjne z podpisem „Wpisz nr strony” służy do wpisania strony aktualnie czytanej książki lub 0 gdy użytkownik nie zaczął. Następnie należy wpisać ilość stron książki lub książek (ze znakiem ‘+’). Kolejne dwa pola powinno się wypełniać od lewej do prawej, wpisując tytuł książki, a w drugiej kolejności autora. Wyjście z pola zawierającego dane autora, skutkuję automatycznym załadowaniem ze strony Helion.pl danych odpowiadających kryteriom wyszukiwania (zazwyczaj wystarczy wypełnić tylko jedno pole [dowolnie ze znakami lub bez polskich znaków], aby otrzymać bazę danych). Po wybraniu właściwego tytułu, użytkownik załadowuje wszystkie dane do pól wraz z okładką książki w postaci ikony wyświetlanej po prawej stronie.",
      "options_list": ["Zapis do pliku tekstowego wygenerowanych danych wraz z aktualną datą.", "Możliwość zmiany koloru tła oraz rozmiaru czcionki.", "Automatyczny zapis preferencji użytkownika w trakcie zamykania aplikacji (rozmiary okna i czcionki oraz kolor tła).", "Pasek ładowania wyświetlany w momencie wczytywania danych ze strony internetowej."],
      "github": "https://github.com/micavanco",
      "download": "../img/projects/pagescheck/download/PagesCheck.jar",
      "images": ["pagescheck/pagescheck1.bmp","pagescheck/pagescheck2.bmp","pagescheck/pagescheck3.bmp","pagescheck/pagescheck4.bmp"]
    },
    {"tag": "assembler",
      "header": "Miernik Temperatury",
      "description": "Układ urządzeń elektronicznych pozwalający na zmierzenie i wyświetlenie informacji o temperaturze na ekranie 2x16 LCD ze sterownikiem HD44780. Projekt zrealizowany na płytce stykowej. Wykorzystany mikrokontroler: Atmega 644p. Zastosowany czujnik temperatury: DS18B20.",
      "functioning": "Pomiar i wyświetlenie aktualnej temperatury na wyświetlaczu 2x16 LCD po nacisnięciu przycisku stykowego Tact Switch.",
      "options_list": ["Zobrazowanie temperatury przez dopasowanie za pomocą modulacji szerokości impulsu (PWM) barwy światła diody RGB"],
      "github": "https://github.com/micavanco/AssemblerTemperatureMeasurement",
      "download": "",
      "images": ["assembler/project.png"]
    },
    {"tag": "reactmovieapp",
      "header": "React Movie App",
      "description": "Aplikacja typu SPA, stworzona we frameworku JavaScript, React. Pobiera informacje na temat filmów poprzez interfejs API i  opcjonalnie zapisuje dane w pamięci sesji.",
      "functioning": "Dostępne są cztery zakładki pobierające dane o filmach: popularnych, najwyżej ocenianych, aktualnie granych w kinach oraz nadchodzących premierach. Po najechaniu kursorem na dany film wyświetlane są skrótowy opis filmu oraz średnia ocen z serwisu IMDb.",
      "options_list": ["Każda zakładka z filmem posiada przycisk umożliwiający zapisanie danego filmu do ulubionych.", "Zakładka \"My Favorites\" umożliwia przegląd zapisanych filmów oraz ewentualne usunięcie danego filmu/filmów.", "Po naciśnięciu na film otwierane jest okno pełnoekranowe, z dokładniejszym opisem filmu, oceną oraz oknem zwiastunu z portalu YouTube"],
      "github": "https://micavanco.github.io/Coders-Camp-week-5/",
      "download": "",
      "images": ["reactmovieapp/reactmovieapp1.png", "reactmovieapp/reactmovieapp2.png", "reactmovieapp/reactmovieapp3.png", "reactmovieapp/reactmovieapp4.png"]
    },
    {"tag": "weatherapp",
      "header": "WeatherApp",
      "description": "Aplikacja typu SPA, stworzona we frameworku JavaScript, React. Pobierająca informacje na temat pogody w zależności od tego co wpisał użytkownik w pole tekstowe.",
      "functioning": "Użytkownik wpisuje nazwę miasta wedle uznania. Po deaktywacji pola tekstowego uruchamiane jest wyszukiwanie informacji na temat pogody. Ostatecznie wyświetlane są informacje w odniesieniu do godziny wraz z ikoną obrazującą warunki.",
      "options_list": ["Strona zostanie rozbudowana wkrótce."],
      "github": "https://github.com/micavanco/WeatherApp",
      "download": "",
      "images": ["weatherapp/weatherapp1.png"]
    }
  ]
}
